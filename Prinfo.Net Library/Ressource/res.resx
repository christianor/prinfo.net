<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="archiv_db_initialize_failed" xml:space="preserve">
    <value>Failed to initialize archiv.db. Integrity check failed</value>
  </data>
  <data name="archiv_db_integrity_failed" xml:space="preserve">
    <value>Archiv database (archiv.db) integrity check failed. Recreating database</value>
  </data>
  <data name="config_error_load" xml:space="preserve">
    <value>Error loading the config file: {0}</value>
  </data>
  <data name="config_error_location" xml:space="preserve">
    <value>Error searching XML Tag: {0}</value>
  </data>
  <data name="config_error_save" xml:space="preserve">
    <value>Failed saving config file: {0}</value>
  </data>
  <data name="directory_not_exist" xml:space="preserve">
    <value>Directory: {0} does not exist</value>
  </data>
  <data name="file_not_exists" xml:space="preserve">
    <value>File does not exist</value>
  </data>
  <data name="host_not_listening" xml:space="preserve">
    <value>{0}: Host is not listening to SNMP-Port. Please ensure that the port is not blocked by a firewall (Maybe not a printer)</value>
  </data>
  <data name="host_not_reachable" xml:space="preserve">
    <value>{0}: Couldn`t reach host</value>
  </data>
  <data name="host_reachable" xml:space="preserve">
    <value>{0}: Device reachable</value>
  </data>
  <data name="manager_holds" xml:space="preserve">
    <value>The Manager is holding {0} printers</value>
  </data>
  <data name="no_hostname" xml:space="preserve">
    <value>Hostname is missing or null</value>
  </data>
  <data name="printer_check_start" xml:space="preserve">
    <value>Printer checking started.</value>
  </data>
  <data name="printer_db_inizialize_failed" xml:space="preserve">
    <value>Failed to initialize printer.db. Integrity check failed</value>
  </data>
  <data name="printer_db_integrity_failed" xml:space="preserve">
    <value>Printer database (printer.db) integrity check failed. Recreating database</value>
  </data>
  <data name="printer_update_aborted" xml:space="preserve">
    <value>Printer Update aborted (Exception: {0})</value>
  </data>
  <data name="printer_update_failed_no_id" xml:space="preserve">
    <value>Updating printer failed - the printer has no Id. Did you create the printer over the PrinterDatabase.CreatePrinter()-Factory?</value>
  </data>
  <data name="printer_update_failed_wrong_id" xml:space="preserve">
    <value>Updating printer failed - a printer with this Id does not exist</value>
  </data>
  <data name="smtp_error" xml:space="preserve">
    <value>Couldn`t send SMTP message. </value>
  </data>
  <data name="snmp_error" xml:space="preserve">
    <value>{0}: ErrorException at SNMP Request Supply Number </value>
  </data>
  <data name="snmp_timeout" xml:space="preserve">
    <value>{0}: SNMP Timeout, the host may be overloaded or is not answering SNMP requests</value>
  </data>
  <data name="supply_integrity_failed" xml:space="preserve">
    <value>{0}: Integrity check of the read supplies failed. Supplies don`t fit the earlier checked supplies. </value>
  </data>
  <data name="supply_state" xml:space="preserve">
    <value>{0}: Supply: {1} Procentual Value: {2}%; Actual Fill Value: {3} Max Fill Value: {4} OID: {5}</value>
  </data>
</root>